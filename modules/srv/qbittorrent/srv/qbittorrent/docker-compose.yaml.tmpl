# -*- mode: yaml; -*-
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-go/master/schema/compose-spec.json

# ref: <https://github.com/linuxserver/docker-qbittorrent>
# ref: <https://github.com/VueTorrent/VueTorrent/wiki/Installation>

# Options
# Behavior > ✅ Show external IP in status bar
# Behavior > ✅ Log performance warnings
# Downloads > Saving Management > Default Torrent Management Mode: Automatic
# Downloads > Saving Management > When Torrent Category changed: Relocate torrent
# Downloads > Saving Management > When Default Save Path changed: Relocate affected torrent
# Downloads > Saving Management > When Category Save Path changed: Relocate affected torrent
# Downloads > Saving Management > ✅ Use Subcategories
# Downloads > Saving Management > Default Save Path: /downloads
# Connection > Listening Port > Port used for incoming connections: {{ .ports.qbittorrent }}
# Connection > Connections Limits > ❌ Global maximum number of upload slots
# Connection > Connections Limits > ❌ Maximum number of upload slots per torrent
# BitTorrent > ❌ Torrent Queueing
# WebUI > Web User Interface (Remote control) > Port: {{ .ports.qbittorrent_webui }}
# WebUI > Web User Interface (Remote control) > Authentication > Username: ***
# WebUI > Web User Interface (Remote control) > Authentication > Password: ***
# WebUI > Web User Interface (Remote control) > Authentication > ✅ Bypass authentication for clients on localhost
# WebUI > Web User Interface (Remote control) > Authentication > ✅ Bypass authentication for clients in whitelisted IP subnets
# WebUI > Web User Interface (Remote control) > ✅ Use alternative WebUI
# WebUI > Web User Interface (Remote control) > ✅ Use alternative WebUI > Files location: /vuetorrent

services:
  qbittorrent:
    container_name: qbittorrent
    environment:
      DOCKER_MODS: ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
      PGID: "{{ .services.gid }}"
      PUID: "{{ .services.uid }}"
      TORRENTING_PORT: "{{ .ports.qbittorrent }}"
      WEBUI_PORT: "{{ .ports.qbittorrent_webui }}"
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: host # IPv6
    pull_policy: weekly
    restart: unless-stopped
    user: "{{ .services.uid }}:{{ .services.gid }}"
    volumes:
      - type: bind
        source: ./config
        target: /config
        bind:
          create_host_path: false
      - type: bind
        source: ./downloads
        target: /downloads
        bind:
          create_host_path: false
