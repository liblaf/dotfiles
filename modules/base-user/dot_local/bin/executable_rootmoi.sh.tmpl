#!/bin/bash
# -*- mode: sh; -*-
set -o errexit
set -o nounset
set -o pipefail

# ref: <https://github.com/felipecrs/dotfiles/blob/master/home/dot_local/bin/executable_rootmoi.tmpl>

# {{- $configDir := joinPath .chezmoi.homeDir ".config/rootmoi" }}
# {{- $configFile := joinPath $configDir "chezmoi.yaml" }}
# {{- $persistentStateFile := joinPath $configDir "chezmoistate.boltdb" }}
# {{- $cacheDir := joinPath .chezmoi.homeDir ".cache/rootmoi" }}

if [[ -f '{{ .chezmoi.executable }}' ]]; then
  executable='{{ .chezmoi.executable }}'
else
  executable=$(which chezmoi)
fi

# Ensure the folders are created, because otherwise they will be created as
# root, including the ~/.cache and ~/.config, which can cause other programs
# to stop working.
# shellcheck disable=SC2016
mkdir --parents --verbose '{{ $configDir }}' '{{ $cacheDir }}'

# We should not use sudo's --preserve-env option because the sudo function will
# automatically bypass sudo if the user is root already.
env_args=(env "PATH=${PATH}")
if [[ ${DOTFILES_TEST-} == true ]]; then
  env_args+=("DOTFILES_TEST=true")
fi

sudo exec "${env_args[@]}" \
  "$executable" "$@" \
  --config='{{ $configFile }}' \
  --persistent-state='{{ $persistentStateFile }}' \
  --cache='{{ $cacheDir }}'
