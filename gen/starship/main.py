# /// script
# requires-python = ">=3.12"
# dependencies = [
#     "msgspec[toml]",
# ]
# ///

import subprocess
from collections.abc import Mapping
from pathlib import Path

import msgspec

type StarshipConfig = Mapping

CONFIG_HEADER: bytes = b"""\
#:schema https://raw.githubusercontent.com/starship/starship/refs/heads/master/.github/config-schema.json
# This file is @generated by `gen/starship/main.py`.
# DO NOT EDIT!
"""


def deep_merge(mapping: Mapping, *updates: Mapping) -> dict:
    result: dict = dict(mapping)
    for update in updates:
        for key, value in update.items():
            if (
                key in result
                and isinstance(result[key], Mapping)
                and isinstance(value, Mapping)
            ):
                result[key] = deep_merge(result[key], value)
            else:
                result[key] = value
    return result


def load_config(name: str) -> StarshipConfig:
    file: Path = Path(__file__).parent / f"starship.{name}.toml"
    with file.open("rb") as fp:
        return msgspec.toml.decode(fp.read())


def load_preset(preset: str) -> StarshipConfig:
    process: subprocess.CompletedProcess[str] = subprocess.run(
        ["starship", "preset", preset], stdout=subprocess.PIPE, check=True, text=True
    )
    return msgspec.toml.decode(process.stdout)


def save_config(file: Path, config: StarshipConfig) -> None:
    with file.open("wb") as fp:
        fp.write(CONFIG_HEADER)
        fp.write(msgspec.toml.encode(config))


def main() -> None:
    config_dir: Path = Path("modules/cli-starship/dot_config")
    bracketed_segments: StarshipConfig = load_preset("bracketed-segments")
    nerd_font_symbols: StarshipConfig = load_preset("nerd-font-symbols")
    custom: StarshipConfig = load_config("custom")
    config: StarshipConfig = deep_merge(bracketed_segments, nerd_font_symbols, custom)
    save_config(config_dir / "starship.toml", config)


if __name__ == "__main__":
    main()
